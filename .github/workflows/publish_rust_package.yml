# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: Publish Rust-Python Package

on:
  workflow_dispatch:


jobs:
  build_arm64:
    name: Build for arm64 arch
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.12"
          - "3.13"
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU for Multi-Arch support
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build container
        run: |
          cd python/handlebarrz
          docker build --platform linux/arm64 -t linux-arm64 -f dockerfile-arm64 .

      - name: Run container
        run: |
          docker run -v "$PWD/python/handlebarrz":/project linux-arm64:latest sh ./generate-arm-wheels.sh "python${{ matrix.python-version }}"

      - name: Upload build packages
        uses: actions/upload-artifact@v4
        with:
          name: wheels-arm64-${{ matrix.python-version }}
          path: python/handlebarrz/target/wheels
  
  build_x86_64:
    name: Build for x86_64 arch
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.12"
          - "3.13"

    steps:
      - uses: actions/checkout@v4

      - name: Build container
        run: |
          cd python/handlebarrz
          docker build -t linux-x86-64 -f dockerfile-x86-64 .

      - name: Run container
        run: |
          docker run -v "$PWD/python/handlebarrz":/project linux-x86-64:latest sh ./generate-x86-64-wheels.sh "python${{ matrix.python-version }}"

      - name: Upload build packages
        uses: actions/upload-artifact@v4
        with:
          name: wheels-x86-64-${{ matrix.python-version }}
          path: python/handlebarrz/target/wheels

  pypi_publish:
    name: Upload to PyPI by python version
    needs: [build_arm64,build_x86_64]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.12"
          - "3.13"
    environment:
      # change to publish or similar in productive CI
      name: publish-testpypi
    permissions:
      id-token: write
    steps:
      - name: Download wheels arm64
        uses: actions/download-artifact@v4
        with:
          name: wheels-arm64-${{ matrix.python-version }}
          path: dist-${{ matrix.python-version }}/

      - name: Download wheels x86-64
        uses: actions/download-artifact@v4
        with:
          name: wheels-x86-64-${{ matrix.python-version }}
          path: dist-${{ matrix.python-version }}/

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          # remove this custom repository-url in productive CI
          repository-url: https://test.pypi.org/legacy/
          verbose: true
          packages-dir: dist-${{ matrix.python-version }}/

  smoke_test_arm64: 
    name: Test for arm64 arch
    needs: [pypi_publish]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.12"
          - "3.13"
        linux_platform:
          - "debian"
          - "fedora"
          - "redhat"
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU for Multi-Arch support
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build container
        run: |
          cd python/handlebarrz/smoke_tests
          docker build --platform linux/arm64 \
          -t test-${{ matrix.python-version }}-arm64 \
          -f Dockerfile_${{ matrix.python-version }}_arm64 .

      - name: Run container
        run: |
          docker run test-${{ matrix.python-version }}-arm64:latest \ 
          uv run --python ${{ matrix.python-version }} handlebarrz_test.py

  smoke_test_x86_64: 
    name: Test for x86_64 arch
    needs: [pypi_publish]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.12"
          - "3.13"
        linux_platform:
          - "debian"
          - "fedora"
          - "redhat"
    steps:
      - uses: actions/checkout@v4

      - name: Build container
        run: |
          cd python/handlebarrz/smoke_tests
          docker build \
          -t test-${{ matrix.python-version }} \
          -f Dockerfile_${{ matrix.python-version }} .

      - name: Run container
        run: |
          docker run test-${{ matrix.python-version }}:latest \ 
          uv run --python ${{ matrix.python-version }} handlebarrz_test.py


